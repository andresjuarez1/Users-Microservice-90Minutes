version: 0.2

env:
  parameter-store:
    DB_HOST: "/90minutes/dev/services/users/database_host"
    DB_USER: "/90minutes/dev/services/users/database_user"
    DB_PASSWORD: "/90minutes/dev/services/users/database_password"
    DB_DATABASE: "/90minutes/dev/services/users/database_name"
    JWT_SECRET: "/90minutes/dev/services/users/JWT_SECRET"
    EMAIL_HOST: "/90minutes/dev/services/users/EMAIL_HOST"
    EMAIL_PORT: "/90minutes/dev/services/users/EMAIL_PORT"
    EMAIL_USER: "/90minutes/dev/services/users/EMAIL_USER"
    EMAIL_PASS: "/90minutes/dev/services/users/EMAIL_PASS"
    TOKEN_LENGTH: "/90minutes/dev/services/users/TOKEN_LENGTH"
    RABBITMQ_HOST: "/90minutes/dev/services/users/RABBITMQ_HOST"
    RABBITMQ_PROTOCOL: "/90minutes/dev/services/users/RABBITMQ_PROTOCOL"
    RABBITMQ_USER: "/90minutes/dev/services/users/RABBITMQ_USER"
    RABBITMQ_PASS: "/90minutes/dev/services/users/RABBITMQ_PASS"
    RABBITMQ_PORT: "/90minutes/dev/services/users/RABBITMQ_PORT"
    RABBIT_EXCHANGE_NOTIFICATION: "/90minutes/dev/services/users/RABBIT_EXCHANGE_NOTIFICATION"
    RABBIT_QUEUE_NEW_USER_NOTIFICATION: "/90minutes/dev/services/users/RABBIT_QUEUE_NEW_USER_NOTIFICATION"
    RABBIT_ROUTING_KEY_USER_TOKEN: "/90minutes/dev/services/users/RABBIT_ROUTING_KEY_USER_TOKEN"
    RABBIT_QUEUE_NEW_USER_PAYMENT: "/90minutes/dev/services/users/RABBIT_QUEUE_NEW_USER_PAYMENT"
    RABBIT_ROUTING_KEY_USER_PAYMENT: "/90minutes/dev/services/users/RABBIT_ROUTING_KEY_USER_PAYMENT"
    RABBIT_QUEUE_CHECK_MEMBERSHIP_NOT_PAID_REQ: "/90minutes/dev/services/users/RABBIT_QUEUE_CHECK_MEMBERSHIP_NOT_PAID_REQ"
    RABBIT_QUEUE_CHECK_MEMBERSHIP_NOT_PAID_RES: "/90minutes/dev/services/users/RABBIT_QUEUE_CHECK_MEMBERSHIP_NOT_PAID_RES"
    RABBIT_QUEUE_SEND_MEMBERSHIP_DATA: "/90minutes/dev/services/users/RABBIT_QUEUE_SEND_MEMBERSHIP_DATA"
    RABBIT_ROUTING_KEY_CHECK_MEMBERSHIP_NOT_PAID_REQ: "/90minutes/dev/services/users/RABBIT_ROUTING_KEY_CHECK_MEMBERSHIP_NOT_PAID_REQ"
    RABBIT_ROUTING_KEY_CHECK_MEMBERSHIP_NOT_PAID_RES: "/90minutes/dev/services/users/RABBIT_ROUTING_KEY_CHECK_MEMBERSHIP_NOT_PAID_RES"
    RABBIT_ROUTING_KEY_SEND_MEMBERSHIP_DATA: "/90minutes/dev/services/users/RABBIT_ROUTING_KEY_SEND_MEMBERSHIP_DATA"

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo log in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 471112887179.dkr.ecr.us-east-2.amazonaws.com
      - REPOSITORY_URI=471112887179.dkr.ecr.us-east-2.amazonaws.com/dev-users-service
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image.
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo write definitions file...
      # Give your container name
      - DOCKER_CONTAINER_NAME=dev-users-service
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files: imagedefinitions.json